#library creation
create_lib -technology ../ref/tech/saed32nm_1p9m.tf -ref_libs  \
{../ref/CLIBs/saed32_1p9m_tech.ndm ../ref/CLIBs/saed32_hvt.ndm  \
../ref/CLIBs/saed32_lvt.ndm ../ref/CLIBs/saed32_rvt.ndm  \
../ref/CLIBs/saed32_sram_lp.ndm} riscv_block

#reading netlist and SDC
read_verilog  ../synthysis_DC/results/riscv.v
read_sdc ../synthysis_DC/results/riscv.sdc

#floor plan  
initialize_floorplan -shape U -orientation E -side_ratio {4 1 3 2 3 1} -core_offset {3}
set_block_pin_constraints -self -allowed_layers {M3 M4} -sides 1
place_pins -ports [get_ports -filter direction==in]
set_block_pin_constraints -self -allowed_layers {M3 M4} -sides 3
place_pins -ports [get_ports -filter direction==out]
set_attribute [get_ports *] physical_status fixed  

#link_design
#initialize_floorplan

#parasitic reading
read_parasitic_tech -name {new_model} -tlup {../ref/tech/saed32nm_1p9m_Cmin.lv.tluplus} -layermap  \
{../ref/tech/saed32nm_tf_itf_tluplus.map}
read_parasitic_tech -layermap ../ref/tech/saed32nm_tf_itf_tluplus.map -tlup ../ref/tech/saed32nm_1p9m_Cmax.lv.nxtgrd -name maxTLU
read_parasitic_tech -layermap ../ref/tech/saed32nm_tf_itf_tluplus.map -tlup ../ref/tech/saed32nm_1p9m_Cmin.lv.nxtgrd -name minTLU

#mcmm
source -echo ../design_data/mcmm_risc_core.tcl

#poweplan
## create the PG nets
create_net -power VDD
create_net -ground VSS

## Making Logical Connections
connect_pg_net -net VDD [get_pins -hierarchical "*/VDD"]
connect_pg_net -net VSS [get_pins -hierarchical "*/VSS"]

## Setting up the attribute for TIE cells
set_attribute [get_lib_cells */*TIE*] dont_touch false
set_lib_cell_purpose -include optimization [get_lib_cells */*TIE*]

### creating PG Rails
create_pg_mesh_pattern P_top_two \
-layers { \
{ {horizontal_layer: M7} {width: 0.12} {spacing: interleaving} {pitch: 0.5} {trim : true} } \
{ {vertical_layer: M8} {width: 0.12} {spacing: interleaving} {pitch: 0.5} {trim : true} } \
} 

set_pg_strategy S_default_vddvss \
-core \
-pattern { {name: P_top_two} {nets:{VSS VDD}} } \
-extension { {{stop:design_boundary_and_generate_pin}} }

compile_pg -strategies {S_default_vddvss}
remove_routing_blockages {RB_0}
create_pg_vias -nets {VDD VSS} -from_layers M5 -to_layers M9 -drc no_check

#### Creating Standard cell rails
create_pg_std_cell_conn_pattern std_rail_conn1 -rail_width 0.094 -layers M1

set_pg_strategy std_rail_1 -pattern {{name : std_rail_conn1} {nets: "VDD VSS"}} -core

compile_pg -strategies std_rail_1 -ignore_drc

#### Creation of Vias b/w rails and PG straps

create_pg_vias -nets {VDD VSS} -from_layers M1 -to_layers M8 -drc no_check

# Check physical Connectivity of PG nets
check_pg_connectivity

# Check for DRC errors in the design,
check_pg_drc

### saving block
save_block -as powerplan_done

#To remove Power routes if you have any issue while building powerplan use all below cmds.

#remove_pg_strategies -all
#remove_pg_patterns -all
#remove_pg_regions -all
#remove_pg_via_master_rules -all
#remove_pg_strategy_via_rules -all
#remove_routes -net_types {power ground}
#remove_routes -net_types {VDD VSS}
#remove_routes -net_types {power ground} -ring -stripe -macro_pin_connect -lib_cell_pin_connect
#

#placement
create_placement -floorplan
legalize_placement
place_pins -self

#clock route
set_app_options -name time.remove_clock_reconvergence_pessimism -value true
report_clock_settings
report_qor -summary
clock_opt

#routing
#set_routing_rule all -clear -default_rule -min_routing_layer 1 -max_routing_layer 9
route_auto -max_detail_route_iterations 30
route_eco
#signoff_check_drc -auto_eco true
check_lvs
save_block

#script writing
write_script -force -format icc2 -output ../reports/router_spef
write_parasitics -output ../reports/spef_generation_1
write_sdf ../results/router_1.sdf
write_verilog ../results/router_1.v
write_gds ../results/router_1.gds
write_sdc -output ../results/router_v.sdc

save_block